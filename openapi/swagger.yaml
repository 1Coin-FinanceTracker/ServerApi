openapi: 3.0.1
info:
  title: OpenAPI definition
  version: 1.0.0
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/OneCoin/OneCoinServerApi/1.0.0
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/auth/register/google:
    post:
      tags:
      - auth-controller
      operationId: registerByGoogle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/auth/register/email:
    post:
      tags:
      - auth-controller
      operationId: registerByEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/auth/login/totp:
    post:
      tags:
      - auth-controller
      operationId: loginByTotp
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/auth/login/otp:
    get:
      tags:
      - auth-controller
      operationId: requestOtp
      parameters:
      - name: login
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - auth-controller
      operationId: loginByOtp
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/auth/login/google:
    post:
      tags:
      - auth-controller
      operationId: loginByGoogle
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/user/totp:
    get:
      tags:
      - user-controller
      operationId: generateUserTotpSeed
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/user/:
    get:
      tags:
      - user-controller
      operationId: getUserInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      required:
      - authTypes
      - login
      - name
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        authTypes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - EM
            - GGL
        email:
          type: string
        googleId:
          type: string